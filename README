ybigint big numbers library

DISCLAIMER

This code is by no means production able. Many checks aren't implemented (array bounds mostly) and the performance can
be disastrous in some cases. It is only meant as an algorithmic exercise.

The libray handles numbers for up to 512000 digits (500KiB) stored as static arrays.

Format & Arithmetic operations
---------------------

Initialization:

Addition:

Subtraction:

Multiplication:
	Ancient Egyptian algorithm,
	Karatsuba,
	Toom-Cook,
	Shonhage-Strassen
	
Division & modulo:

Power:

Factorial:

Document the library API
------------------------

//
void bigint_lib_init(u64 s);

//
bigint_t *bigint_init_z(u64 n);
bigint_t *bigint_init_u(u64 v);
bigint_t *bigint_init_i(i64 v);
bigint_t *bigint_init_r(u64 n);
bigint_t *bigint_init_s(u8 *s);
bigint_t *bigint_init_f(u8 *fname);

//
u8 bigint_is_zero(bigint_t *a);
u8 bigint_equal_u(bigint_t *a, bigint_t *b, i64 *pos);
u8 bigint_equal_i(bigint_t *a, bigint_t *b, i64 *pos);
u8 bigint_compare_u(bigint_t *a, bigint_t *b, i64 *pos);
u8 bigint_compare_i(bigint_t *a, bigint_t *b, i64 *pos);

//
void bigint_add_u(bigint_t *a, bigint_t *b, bigint_t *r);
void bigint_add_i(bigint_t *a, bigint_t *b, bigint_t *r);
void bigint_sub_u(bigint_t *a, bigint_t *b, bigint_t *r);
void bigint_sub_i(bigint_t *a, bigint_t *b, bigint_t *r);

//
void bigint_abs_i(bigint_t *b);

//
void bigint_mul_2(bigint_t *a, bigint_t *r);
void bigint_mul_u(bigint_t *a, bigint_t *b, bigint_t *r);
void bigint_mul_i(bigint_t *a, bigint_t *b, bigint_t *r);

//
void bigint_div_2(bigint_t *a, bigint_t *q, u8 *r);
void bigint_div_i(bigint_t *a, bigint_t *b, bigint_t *q, bigint_t *r);

//
void bigint_pow_n(bigint_t *a, u64 p, bigint_t *r);
void bigint_pow_i(bigint_t *a, bigint_t *p, bigint_t *r);

//
void bigint_fact_u(bigint_t *a, bigint_t *r);

//
void bigint_free(bigint_t **b);

//
void bigint_print(bigint_t *b);
void bigint_print_signed(bigint_t *b);
void bigint_print_meta(bigint_t *b);
u8 bigint_print_file(bigint_t *b, FILE *fp);

Good practices & things to avoid
--------------------------------

Performance tests
-----------------
